# --------------------------------------------------------------------------------------------------
# -------------------------------------- PRE-PARSING :: Token --------------------------------------
# --------------------------------------------------------------------------------------------------
from . Tokentype import Tokentype


# --------------------------------------------------------------------------------------------------
# ----------------------------------------- CLASS :: Token -----------------------------------------
# --------------------------------------------------------------------------------------------------
class Token(object):

    # ------------------------------------------------------------------------------------------
    # -------------------------------- ATTRIBUTES :: Attributes --------------------------------
    # ------------------------------------------------------------------------------------------
    origin  : str
    start   : int
    end     : int
    line    : int
    column  : int

    literal : str
    type    : Tokentype


    # ------------------------------------------------------------------------------------------
    # ------------------------------- CONSTRUCTOR :: Constructor -------------------------------
    # ------------------------------------------------------------------------------------------
    def __init__(self,
        type: Tokentype, literal: str, start: int, end: int, line: int, column: int, origin: str
    ) -> None:

        self.literal = literal
        self.type    = type

        self.start   = start
        self.end     = end
        self.line    = line
        self.column  = column
        self.origin  = origin


    # ------------------------------------------------------------------------------------------
    # ------------------------------- CONSTRUCTOR :: Constructor -------------------------------
    # ------------------------------------------------------------------------------------------
    def stringify(self) -> str:

        if Tokentype.STRING & self.type:
            return   f"Token('{self.type.name}', {self.literal})"

        return f"Token('{self.type.name}', {repr(self.literal)})"

    def __repr__(self) -> str:
        return self.stringify()

    def __str__(self)  -> str:
        return self.stringify()



    # ------------------------------------------------------------------------------------------
    # ------------------------------- PROPERTY :: Token Context --------------------------------
    # ------------------------------------------------------------------------------------------
    @property
    def context(self) -> tuple[int, int, int, int]:
        return self.start, self.end, self.line, self.column