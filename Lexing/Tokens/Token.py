# --------------------------------------------------------------------------------------------------
# ---------------------------------------- LEXING :: Tokens -----------------------------------------
# --------------------------------------------------------------------------------------------------
from . Tokentype import Tokentype


# --------------------------------------------------------------------------------------------------
# ----------------------------------------- CLASS :: Tokens -----------------------------------------
# --------------------------------------------------------------------------------------------------
class Token(object):

	# ------------------------------------------------------------------------------------------
	# -------------------------------- ATTRIBUTES :: Attributes --------------------------------
	# ------------------------------------------------------------------------------------------
	origin 	: str
	start  	: int
	end    	: int
	line   	: int
	column 	: int

	literal : str
	type	: Tokentype


	# ------------------------------------------------------------------------------------------
	# ------------------------------- CONSTRUCTOR :: Constructor -------------------------------
	# ------------------------------------------------------------------------------------------
	def __init__(self,
		type: Tokentype, literal: str, start: int, end: int, line: int, column: int, origin: str
	) -> None:

		self.literal = literal
		self.type    = type

		self.start 	 = start
		self.end 	 = end
		self.line 	 = line
		self.column  = column


	# ------------------------------------------------------------------------------------------
	# --------------------------- STRINGIFICATION :: Stringification ---------------------------
	# ------------------------------------------------------------------------------------------
	def __repr__(self) -> str:
		return f"Tokens('{self.type.name}' {repr(self.literal)})"

	def __str__(self)  -> str:
		return f"Tokens('{self.type.name}' {repr(self.literal)})"


	# ------------------------------------------------------------------------------------------
	# ------------------------------ METHOD :: Reclassify a Tokens ------------------------------
	# ------------------------------------------------------------------------------------------
	def reclassify(self, tokentype: Tokentype) -> 'Tokens':
		return setattr(self, 'type', self.type | tokentype) or self